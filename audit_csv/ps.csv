id;name;command;check;remediation;type;applies_if_empty
O25;(L2) Ensure Safe Attachments for SharePoint, OneDrive, and Microsoft Teams is Enabled (Automated);Get-AtpPolicyForO365 | Select -ExpandProperty EnableATPForSPOTeamsODB;TRUE;Set-AtpPolicyForO365 -EnableATPForSPOTeamsODB $True;ps;TRUE
O53;(L1) Ensure mailbox auditing for all users is Enabled (Automated);Get-OrganizationConfig | foreach {$_.AuditDisabled};FALSE;"$AuditAdmin = @(""Copy"", ""Create"", ""FolderBind"", ""HardDelete"", ""MessageBind"", ""Move"", ""MoveToDeletedItems"", ""SendAs"", ""SendOnBehalf"", ""SoftDelete"", ""Update"", ""UpdateCalendarDelegation"", ""UpdateFolderPermissions"", ""UpdateInboxRules"");$AuditDelegate = @(""Create"", ""FolderBind"", ""HardDelete"", ""Move"", ""MoveToDeletedItems"", ""SendAs "", ""SendOnBehalf"", ""SoftDelete"", ""Update"", ""UpdateFolderPermissions"", ""Update InboxRules"");$AdminOwner = @(""Create"", ""HardDelete"", ""MailboxLogin"", ""Move"", ""MoveToDeletedItems"", ""Soft Delete"", ""Update"", ""UpdateCalendarDelegation"", ""UpdateFolderPermissions"", ""UpdateInboxRules"");Get-Mailbox -ResultSize Unlimited | Set-Mailbox -AuditEnabled $true - AuditLogAgeLimit 180 -AuditAdmin $AuditAdmin -AuditDelegate $AuditDelegate - AuditOwner $AuditOwner";ps;TRUE
O12;(L1) Ensure modern authentication for Exchange Online is enabled (Automated);Get-OrganizationConfig | select -ExpandProperty OAuth2ClientProfileEnabled;TRUE;Set-OrganizationConfig -OAuth2ClientProfileEnabled $True;ps;TRUE
O23;(L2) Ensure 'External sharing' of calendars is not available (Automated);Get-SharingPolicy | Where-Object { $_.Domains -like '*CalendarSharing*' } | select -ExpandProperty Enabled;FALSE;"Set-SharingPolicy -Identity ""Name of the policy"" -Enabled $False";ps;TRUE
O31;(L2) Ensure the customer lockbox feature is enabled (Automated);Get-OrganizationConfig | select -ExpandProperty CustomerLockBoxEnabled;TRUE;Set-OrganizationConfig -CustomerLockBoxEnabled $true;ps;TRUE
O411;(L2) Ensure MailTips are enabled for end users (Automated);"Get-OrganizationConfig | foreach {$_.MailTIpsAllTipsEnabled;$_.MailTipsExternalRecipientsTipsEnabled;$_.MailTipsGroupMetricsEnabled;$_.MailTipsLargeAudienceThreshold}";"True
True
True
25";Set-OrganizationConfig -MailTipsAllTipsEnabled $true - MailTipsExternalRecipientsTipsEnabled $true -MailTipsGroupMetricsEnabled $true -MailTipsLargeAudienceThreshold '25';ps;TRUE
O52;(L1) Ensure Microsoft 365 audit log search is Enabled (Automated);Get-AdminAuditLogConfig | select -ExpandProperty  UnifiedAuditLogIngestionEnabled;TRUE;Set-AdminAuditLogConfig -UnifiedAuditLogIngestionEnabled $true;ps;TRUE
O410;(L1) Ensure notifications for internal users sending malware is Enabled (Automated);Get-MalwareFilterPolicy | select -ExpandProperty EnableInternalSenderAdminNotifications;TRUE;Set-MalwareFilterPolicy -Identity '{Identity Name}' - EnableInternalSenderAdminNotifications $True -InternalSenderAdminAddress {admin@domain1.com};ps;TRUE
O47;(L1) Ensure that DKIM is enabled for all Exchange Online Domains (Automated);Get-DkimSigningConfig | Select -expandproperty Enabled;TRUE;Set-DkimSigningConfig -Identity < domainName > -Enabled $True;ps;TRUE
O45;(L2) Ensure Safe Attachments policy is enabled (Automated);Get-SafeAttachmentPolicy | Select -ExpandProperty Enable;TRUE;;ps;TRUE
O24;(L2) Ensure Safe Links for Office Applications is Enabled (Automated);"Get-SafeLinksPolicy | Select Name | foreach {Get-SafeLinksPolicy $_.Name} | foreach {$_.EnableSafeLinksForEmail,$_.EnableSafeLinksForTeams,$_.EnableSafeLinksForOffice} | out-string | % {$_ -Replace ""`n"", """" } | out-string";^(?!.*False).*$;"$params = @{ Name = ""CIS SafeLinks Policy"" EnableSafeLinksForEmail = $true EnableSafeLinksForTeams = $true EnableSafeLinksForOffice = $true TrackClicks = $true AllowClickThrough = $false ScanUrls = $true EnableForInternalSenders = $true DeliverMessageAfterScan = $true DisableUrlRewrite = $false};New-SafeLinksPolicy @params";ps;TRUE
O28;(L2) Ensure users installing Outlook add-ins is not allowed (Automated);"Get-EXOMailbox | Select-Object -Unique RoleAssignmentPolicy | ForEach-Object {Get-RoleAssignmentPolicy -Identity $_.RoleAssignmentPolicy | Where-Object {$_.AssignedRoles -like ""*Apps*""}} |Select-Object Identity, @{Name=""AssignedRoles""; Expression={ Get-Mailbox | Select-Object -Unique RoleAssignmentPolicy | ForEach-Object { Get-RoleAssignmentPolicy -Identity $_.RoleAssignmentPolicy | Select-Object -ExpandProperty AssignedRoles | Where-Object {$_ -like ""*Apps*""} } }} | Select -ExpandProperty AssignedRoles";\n$;"$policy = ""Role Assignment Policy - Prevent Add-ins"" $roles = ""MyTextMessaging"", ""MyDistributionGroups"", `
""MyMailSubscriptions"", ""MyBaseOptions"", ""MyVoiceMail"", `
""MyProfileInformation"", ""MyContactInformation"", ""MyRetentionPolicies"", `
         ""MyDistributionGroupMembership"";New-RoleAssignmentPolicy -Name $policy -Roles $roles Set-RoleAssignmentPolicy -id $policy -IsDefault;Get-EXOMailbox -ResultSize Unlimited | Set-Mailbox -RoleAssignmentPolicy $policy";ps;TRUE
O33;(L2) Ensure 'external access' is restricted in the Teams admin center (Manual);Get-CsTenantFederationConfiguration|ft -HideTableHeaders AllowTeamsConsumer,AllowPublicUsers,AllowFederatedUsers,AllowedDomains;((?:False\s*){2}(?:False\s|True\s(?!AllowAllKnownDomains)));"Set-CsTenantFederationConfiguration -AllowTeamsConsumer $false - AllowPublicUsers $false -AllowFederatedUsers $true $list = New-Object Collections.Generic.List[String] $list.add(""contoso.com"") $list.add(""fabrikam.com"") Set-CsTenantFederationConfiguration -AllowedDomainsAsAList $list";ps;TRUE
O41;(L1) Ensure the Common Attachment Types Filter is enabled (Automated);Get-MalwareFilterPolicy -Identity Default | foreach {$_.enablefilefilter};TRUE;Set-MalwareFilterPolicy -Identity Default -EnableFileFilter $true;ps;TRUE
O46;(L1) Ensure that an anti-phishing policy has been created (Automated);Get-AntiPhishPolicy | foreach {$_.name,$_.enabled,$_.PhishThresholdLevel,$_.EnableMailboxIntelligenceProtection,$_.EnableMailboxIntelligence,$_.EnableSpoofIntelligence};^(.{0,64}(\n(True|[4-9])\n?){5})*$;"New-AntiPhishPolicy -Name ""Office365 AntiPhish Policy""";ps;TRUE
A123;Ensure That No Custom Subscription Administrator Roles Exist (Automated);role definition list --custom-role-only True;None; az role definition delete --name <role name>;az;TRUE
A2115;Ensure that Auto provisioning of 'Log Analytics agent for Azure VMs' is Set to 'On' (Automated);security auto-provisioning-setting list --query [0].autoProvision;On;"az account get-access-token --query ""{subscription:subscription,accessToken:accessToken}"" --out tsv | xargs -L1 bash -c 'curl -X PUT -H ""Authorization: Bearer $1"" -H ""Content-Type: application/json"" https://management.azure.com/subscriptions/subscriptionID/providers/Microsoft .Security/autoProvisioningSettings/default?api-version=2017-08-01-preview - d@""input.json""'
 Where input.json contains the Request body json data as mentioned below.
 ""id"": ""/subscriptions/<Your_Subscription_Id>/providers/Microsoft.Security/autoProvi sioningSettings/default"", ""name"": ""default"", ""type"": ""Microsoft.Security/autoProvisioningSettings"", ""properties"": { ""autoProvision"": ""On""}";az;FALSE
A31;Ensure that 'Secure transfer required' is set to 'Enabled' (Automated);storage account list --query [*].[enableHttpsTrafficOnly];TRUE;az storage account update --name <storageAccountName> --resource-group <resourceGroupName> --https-only true;az;FALSE
A61;Ensure that RDP access from the Internet is evaluated and restricted (Automated);network nsg list --query [*].[name,securityRules] ;;From Azure Portal;az;FALSE
A62;Ensure that SSH access from the Internet is evaluated and restricted (Automated);network nsg list --query [*].[name,securityRules] ;;From Azure Portal;az;FALSE
A63;Ensure that UDP access from the Internet is evaluated and restricted (Automated);network nsg list --query [*].[name,securityRules] ;;From Azure Portal;az;FALSE
A64;Ensure that HTTP(S) access from the Internet is evaluated and restricted (Automated);network nsg list --query [*].[name,securityRules] ;;From Azure Portal;az;FALSE
A521;Ensure that Activity Log Alert exists for Create Policy Assignment (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A522;Ensure that Activity Log Alert exists for Delete Policy Assignment (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A523;Ensure that Activity Log Alert exists for Create or Update Network Security Group (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A524;Ensure that Activity Log Alert exists for Delete Network Security Group (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A525;Ensure that Activity Log Alert exists for Create or Update Security Solution (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A526;Ensure that Activity Log Alert exists for Delete Security Solution (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A527;Ensure that Activity Log Alert exists for Create or Update SQL Server Firewall Rule (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A528;Ensure that Activity Log Alert exists for Delete SQL Server Firewall Rule (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A529;Ensure that Activity Log Alert exists for Create or Update Public IP Address rule (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A5210;Ensure that Activity Log Alert exists for Delete Public IP Address rule (Automated);monitor activity-log alert list --subscription <subscriptionid> --query [].{Name:name,Enabled:enabled,Condition:condition.allOf,Actions:actions} ;;;az;FALSE
A38;Ensure Default Network Access Rule for Storage Accounts is Set to Deny (Automated);storage account list  --query [*].networkRuleSet.defaultAction;Deny;az storage account update --name <StorageAccountName> --resource-group <resourceGroupName> --bypass AzureServices;az;FALSE
A39;Ensure 'Allow Azure services on the trusted services list to access this storage account' is Enabled for Storage Account Access (Automated);storage account list --query [*].networkRuleSet.bypass;AzureServices;az network private-endpoint create --resource-group <ResourceGroupName -location <location> --name <private endpoint name> --vnet-name <VNET Name> -- subnet <subnet name> --private-connection-resource-id <storage account ID> -connection-name <private link service connection name> --group-id <blob|blob_secondary|file|file_secondary|table|table_secondary|queue|queue_se condary|web|web_secondary|dfs|dfs_secondary>;az;FALSE
A2118;Ensure That 'All users with the following roles' is set to 'Owner' (Automated);security contact list --query [*].notificationsByRole;;"az account get-access-token --query ""{subscription:subscription,accessToken:accessToken}"" --out tsv | xargs -L1 bash -c 'curl -X PUT -H ""Authorization: Bearer $1"" -H ""Content-Type: application/json"" https://management.azure.com/subscriptions/subscriptionID/providers/Microsoft .Security/autoProvisioningSettings/default?api-version=2017-08-01-preview - d@""input.json""'
 Where input.json contains the Request body json data as mentioned below.
 ""id"": ""/subscriptions/<Your_Subscription_Id>/providers/Microsoft.Security/autoProvi sioningSettings/default"", ""name"": ""default"", ""type"": ""Microsoft.Security/autoProvisioningSettings"", ""properties"": { ""autoProvision"": ""On""}";az;FALSE
A2119;Ensure 'Additional email addresses' is Configured with a Security Contact Email (Automated);security contact list --query [*].emails;;"az account get-access-token --query ""{subscription:subscription,accessToken:accessToken}"" --out tsv | xargs -L1 bash -c 'curl -X PUT -H ""Authorization: Bearer $1"" -H ""Content-Type: application/json"" https://management.azure.com/subscriptions/$0/providers/Microsoft.Security/se curityContacts/default?api-version=2020-01-01-preview -d@""input.json""'
 Where input.json contains the data below, replacing validEmailAddress with a single email address or multiple comma-separated email addresses:
 ""id"": ""/subscriptions/<Your_Subscription_Id>/providers/Microsoft.Security/securityC ontacts/default"", ""name"": ""default"", ""type"": ""Microsoft.Security/securityContacts"", ""properties"": { ""email"": ""<validEmailAddress>"", ""alertNotifications"": ""On"", ""alertsToAdmins"": ""On""}";az;TRUE
A2120;Ensure That 'Notify about alerts with the following severity' is Set to 'High' (Automated);security contact list --query [*].alertNotifications;High;"az account get-access-token --query ""{subscription:subscription,accessToken:accessToken}"" --out tsv | xargs -L1 bash -c 'curl -X PUT -H ""Authorization: Bearer $1"" -H ""Content-Type: application/json"" https://management.azure.com/subscriptions/<$0>/providers/Microsoft.Security/ securityContacts/default1?api-version=2017-08-01-preview -d@""input.json""'
 Where input.json contains the data below, replacing validEmailAddress with a single email address or multiple comma-separated email addresses:
 ""id"": ""/subscriptions/<Your_Subscription_Id>/providers/Microsoft.Security/securityC ontacts/default1"", ""name"": ""default1"", ""type"": ""Microsoft.Security/securityContacts"", ""properties"": { ""email"": ""<validEmailAddress>"", ""alertNotifications"": ""On"", ""alertsToAdmins"": ""On""}";az;FALSE
A531;Ensure Application Insights are Configured (Automated);monitor app-insights component show;;"az monitor app-insights component create --app <app name> --resource-group <resource group name> --location <location> --kind ""web"" --retention-time <INT days to retain logs> --workspace <log analytics workspace ID> -subscription <subscription ID>";az;TRUE
A71;Ensure an Azure Bastion Host Exists (Automated);network bastion list --subscription <subscriptionid>;;"az network bastion create --location <location> --name <name of bastion host> --public-ip-address <public IP address name or ID> --resource-group <resource group name or ID> --vnet-name <virtual network containing subnet called ""AzureBastionSubnet""> --scale-units <integer> --sku Standard [--disable-copy-paste true|false] [--enable-ip-connect true|false] [--enable-tunneling true|false]";az;TRUE
A310;Ensure Private Endpoints are used to access Storage Accounts (Automated);storage account show --name <storage_account_name> --query privateEndpointConnections[0].id;;az network private-endpoint create --resource-group <ResourceGroupName -location <location> --name <private endpoint name> --vnet-name <VNET Name> -- subnet <subnet name> --private-connection-resource-id <storage account ID> -connection-name <private link service connection name> --group-id <blob|blob_secondary|file|file_secondary|table|table_secondary|queue|queue_se condary|web|web_secondary|dfs|dfs_secondary>;az;TRUE
A35;Ensure Storage Logging is Enabled for Queue Service for 'Read', 'Write', and 'Delete' requests (Automated);storage logging show --services q --account-name <storage_account_name> --query [queue.read,queue.write,queue.delete];TRUE;az storage logging update --account-name <storageAccountName> --account-key <storageAccountKey> --services b --log rwd --retention 90;az;FALSE
A313;Ensure Storage logging is Enabled for Blob Service for 'Read', 'Write', and 'Delete' requests (Automated);storage logging show --services b --account-name <storage_account_name> --query [blob.read,blob.write,blob.delete];TRUE;az storage logging update --account-name <storageAccountName> --account-key <storageAccountKey> --services b --log rwd --retention 90;az;FALSE
A314;Ensure Storage Logging is Enabled for Table Service for 'Read', 'Write', and 'Delete' Requests (Automated);storage logging show --services t --account-name <storage_account_name> --query [table.read,table.write,table.delete];TRUE;az storage logging update --account-name <storageAccountName> --account-key <storageAccountKey> --services t --log rwd --retention 90;az;FALSE
A315;"Ensure the ""Minimum TLS version"" for storage accounts is set to ""Version 1.2"" (Automated)";storage account list --query [*].minimumTlsVersion;TLS1_2;az storage account update \ --name <storage-account> \ --resource-group <resource-group> \ --min-tls-version TLS1_2;az;FALSE
A311-1;Ensure Soft Delete is Enabled for Azure Containers (Automated);storage blob service-properties show --account-name <storage_account_name> --query deleteRetentionPolicy.enabled;TRUE;az storage blob service-properties delete-policy show --account-name <StorageAccountName> --account-key <accountkey>;az;FALSE
A311-2;Ensure Soft Delete is Enabled for Blob Storage (Automated);storage account blob-service-properties show --account-name <storage_account_name>  --resource-group <storage_resource_group> --query containerDeleteRetentionPolicy.enabled;TRUE;az storage account blob-service-properties show --account-name <StorageAccountName> --account-key <accountkey> --resource-group <resource_group>;az;FALSE
A451;Ensure That 'Firewalls & Networks' Is Limited to Use Selected Networks Instead of All Networks (Automated);cosmosdb list --query [*].isVirtualNetworkFilterEnabled;TRUE;"From Azure Portal
 1. Open the portal menu. 2. Select the Azure Cosmos DB blade. 3. Select a Cosmos DB account to audit. 4. Select Networking. 5. Under Public network access, select Selected networks. 6. Under Virtual networks, select + Add existing virtual network or + Add a new virtual network.

 
 7. For existing networks, select subscription, virtual network, subnet and click Add. For new networks, provide a name, update the default values if required, and click Create. 8. Click Save.";az;FALSE
A37;Ensure that 'Public access level' is disabled for storage accounts with blob containers (Automated) ;storage account list --query [*].publicNetworkAccess;FALSE;az storage account update --name <storage-account> --resource-group <resource-group> --public-network-access Disabled;az;FALSE
A38;Ensure Default Network Access Rule for Storage Accounts is Set to Deny (Automated);storage account list --query [*].networkRuleSet.defaultAction;Deny;az storage account update --name <StorageAccountName> --resource-group <resourceGroupName> --default-action Deny;az;FALSE
A39;Ensure 'Allow Azure services on the trusted services list to access this storage account' is Enabled for Storage Account Access (Automated);storage account list --query [*].networkRuleSet.bypass;AzureServices;az storage account update --name <StorageAccountName> --resource-group <resourceGroupName> --bypass AzureServices;az;FALSE
A431;Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server (Automated);postgres server show --resource-group <postgres_resource_group> --name <postgres_server_name> --query sslEnforcement ;Enabled;az postgres server update --resource-group <resourceGroupName> --name <serverName> --ssl-enforcement Enabled;az;FALSE
A432;Ensure Server Parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server (Automated);postgres server configuration show  --resource-group <postgres_resource_group> --server-name <postgres_server_name> --name log_checkpoints --query value;on;az postgres server configuration set --resource-group <resourceGroupName> -server-name <serverName> --name log_checkpoints --value on;az;FALSE
A433;Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server (Automated);postgres server configuration show  --resource-group <postgres_resource_group> --server-name <postgres_server_name> --name log_connections --query value;on;az postgres server configuration set --resource-group <resourceGroupName> -server-name <serverName> --name log_connections --value on;az;FALSE
A434;Ensure server parameter 'log_disconnections' is set to 'ON' for PostgreSQL Database Server (Automated);postgres server configuration show  --resource-group <postgres_resource_group> --server-name <postgres_server_name> --name log_disconnections --query value;on;az postgres server configuration set --resource-group <resourceGroupName> -server-name <serverName> --name log_disconnections --value on;az;FALSE
A435;Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server (Automated);postgres server configuration show  --resource-group <postgres_resource_group> --server-name <postgres_server_name> --name connection_throttling --query value;on;az postgres server configuration set --resource-group <resourceGroupName> -server-name <serverName> --name connection_throttling --value on;az;FALSE
A436;Ensure Server Parameter 'log_retention_days' is greater than 3 days for PostgreSQL Database Server (Automated);postgres server configuration show  --resource-group <postgres_resource_group> --server-name <postgres_server_name> --name log_retention_days --query value;regex [4-7];az postgres server configuration set --resource-group <resourceGroupName> -server-name <serverName> --name log_retention_days --value <4-7>;az;FALSE
A437;Ensure 'Allow access to Azure services' for PostgreSQL Database Server is disabled (Automated);postgres server firewall-rule list  --resource-group <postgres_resource_group> --server-name <postgres_server_name>;None;az postgres server firewall-rule delete --name AllowAllWindowsAzureIps -resource-group <resourceGroupName> --server-name <serverName>;az;FALSE
A438;Ensure 'Infrastructure double encryption' for PostgreSQL Database Server is 'Enabled' (Automated);postgres server list --query [*].infrastructureEncryption;Enabled;az postgres server create --resource-group <resourcegroup> --name <servername> --location <location> --admin-user <adminusername> --admin-password <server_admin_password> --sku-name GP_Gen4_2 --version 11 -infrastructure-encryption Enabled;az;FALSE
A412;Ensure no Azure SQL Databases allow ingress from 0.0.0.0/0 (ANY IP) (Automated);sql server firewall-rule list --resource-group <azure_sql_resource_group> --server <azure_sql_server_name> ;None;"az sql server firewall-rule update --resource-group <resource group> --server <sql server name> --name <firewall rule name> --start-ip-address ""<IP Address other than 0.0.0.0>"" --end-ip-address ""<IP Address other than 0.0.0.0 or 255.255.255.255>""";az;FALSE
A414;Ensure that Azure Active Directory Admin is Configured for SQL Servers (Automated);sql server ad-admin list --resource-group <azure_sql_resource_group> --server <azure_sql_server_name>  --query [*].name;ActiveDirectory;az sql server ad-admin create --resource-group <resource group name> --server <server name> --display-name <display name> --object-id <object id of user>;az;FALSE
A15;Ensure that 'Data encryption' is set to 'On' on a SQL Database (Automated);sql db tde show --resource-group <resource_group_name> --server <server_name> --database <database_name> --query status;Enabled;az sql db update --resource-group <ResourceGroup> --server <ServerName> --name <DatabaseName> --encryption-protector-type ServiceManaged;az;FALSE
A416;Ensure that 'Auditing' Retention is 'greater than 90 days' (Automated);sql server audit-policy show --name <server_name> --resource-group <resource_group_name> --query retentionDays;91|9[2-9]|[1-9][0-9]{2,};"Set-AzSqlServerAuditing -ResourceGroupName <ResourceGroup> -ServerName <ServerName> -StorageAccountName <StorageAccountName> -AuditActionGroup ""SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP"" -RetentionInDays 91";az;FALSE
A441;Ensure 'Enforce SSL connection' is set to 'Enabled' for Standard MySQL Database Server (Automated);mysql server show --name <server_name> --resource-group <resource_group_name> --query sslEnforcement;Enabled;az mysql server update --name <server_name> --resource-group <resource_group_name> --ssl-enforcement Enabled;az;FALSE
A442;Ensure 'TLS Version' is set to 'TLSV1.2' for MySQL flexible Database Server (Automated);mysql server show --name <server_name> --resource-group <resource_group_name> --query minimalTlsVersion;TLS1_2;az mysql server update --name <server_name> --resource-group <resource_group_name> --minimal-tls-version TLS1_2;az;FALSE
A65;Ensure that Network Security Group Flow Log retention period is 'greater than 90 days' (Automated);network watcher flow-log show --location <location_name> --name <nsg_name> --query retentionPolicy.days;91|9[2-9]|[1-9][0-9]{2,};az network watcher flow-log configure --location <location_name> --nsg <nsg_name> --retention 91;az;FALSE
A66;Ensure that Network Watcher is 'Enabled' (Automated);network watcher show --location <location_name> --query provisioningState;Succeeded;az network watcher configure --enabled true --resource-group <ResourceGroup> --name <NetworkWatcherName>;az;FALSE
A81;Ensure that the Expiration Date is set for all Keys in RBAC Key Vaults (Automated);keyvault key list --vault-name <vault_name> --query [].attributes.expires;.;Set-AzKeyVaultKeyAttribute -VaultName <VaultName> -Name <KeyName> -Expires <ExpirationDate>;az;FALSE
A82;Ensure that the Expiration Date is set for all Keys in Non-RBAC Key Vaults. (Automated);keyvault key list --vault-name <vault_name> --query [].attributes.expires;.;Set-AzKeyVaultKeyAttribute -VaultName <VaultName> -Name <KeyName> -Expires <ExpirationDate>;az;FALSE
A83;Ensure that the Expiration Date is set for all Secrets in RBAC Key Vaults (Automated);keyvault secret list --vault-name <vault_name> --query [].attributes.expires;.;Set-AzKeyVaultSecretAttribute -VaultName <VaultName> -Name <SecretName> -Expires <ExpirationDate>;az;FALSE
A84;Ensure that the Expiration Date is set for all Secrets in Non-RBAC Key Vaults (Automated);keyvault secret list --vault-name <vault_name> --query [].attributes.expires;.;Set-AzKeyVaultSecretAttribute -VaultName <VaultName> -Name <SecretName> -Expires <ExpirationDate>;az;FALSE
A85;Ensure the Key Vault is Recoverable (Automated);keyvault show --name <vault_name> --query properties.enableSoftDelete;TRUE;az keyvault update --name <VaultName> --resource-group <ResourceGroup> --enable-soft-delete true --enable-purge-protection true;az;FALSE
A91;Ensure App Service Authentication is set up for apps in Azure App Service (Automated);webapp auth show --name <app_name> --resource-group <resource_group_name> --query enabled;TRUE;az webapp auth update --resource-group <ResourceGroup> --name <AppName> --enabled true --action LoginWithAzureActiveDirectory;az;FALSE
A92;Ensure Web App Redirects All HTTP traffic to HTTPS in Azure App Service (Automated);webapp config show --name <app_name> --resource-group <resource_group_name> --query httpsOnly;TRUE;Configuration/Setting: Configure the Web App to redirect all HTTP traffic to HTTPS in the Azure portal.;az;FALSE
A93;Ensure Web App is using the latest version of TLS encryption (Automated);webapp config show --name <app_name> --resource-group <resource_group_name> --query minTlsVersion;1.2;Configuration/Setting: Configure the Web App to use the latest version of TLS encryption in the Azure portal.;az;FALSE
A94;Ensure the web app has 'Client Certificates (Incoming client certificates)' set to 'On' (Automated);webapp config show --name <app_name> --resource-group <resource_group_name> --query clientCertEnabled;TRUE;az webapp update --resource-group <ResourceGroup> --name <AppName> --client-cert-enabled true;az;FALSE
A95;Ensure that Register with Azure Active Directory is enabled on App Service (Automated);webapp auth show --name <app_name> --resource-group <resource_group_name> --query enabled;TRUE;az webapp auth update --resource-group <ResourceGroup> --name <AppName> --aad-client-id <ClientId> --aad-client-secret <ClientSecret>;az;FALSE
A910;Ensure FTP deployments are Disabled (Automated);webapp config show --name <app_name> --resource-group <resource_group_name> --query ftpsState;Disabled;az webapp config set --resource-group <ResourceGroup> --name <AppName> --ftps-state Disabled;az;FALSE
A99;Ensure that 'HTTP Version' is the Latest, if Used to Run the Web App (Automated);webapp config show --name <app_name> --resource-group <resource_group_name> --query http20Enabled;TRUE;az webapp config set --name <app_name> --resource-group <resource_group_name> --http20-enabled true;az;FALSE
O112;(L1) Ensure multifactor authentication is enabled for all users in administrative roles (Automated);"Get-MsolRole | Where-Object { $_.Name -like ""*Administrator*"" } | ForEach-Object { Set-MsolRole -RoleObjectId $_.ObjectId -IsEnabled $true }";IsEnabled\s+:\s+True;Enabling multifactor authentication for users in administrative roles requires configuring this setting in your Azure AD settings;ps;FALSE
O117;(L1) Ensure that between two and four global admins are designated (Automated);"Get-MsolRoleMember -RoleObjectId (Get-MsolRole -RoleName ""Global Administrator"").ObjectId | Measure-Object | Where-Object { $_.Count -ge 2 -and $_.Count -le 4 }";Count\s+:\s+(2|3|4);Designating between two and four global administrators is a best practice for security.;ps;FALSE
O1111;(L1) Enable Conditional Access policies to block legacy authentication (Automated);Set-MsolCompanySettings -AllowAdalForNonLTHybrid $false;AllowAdalForNonLTHybrid\s+:\s+False;Enable Conditional Access policies to block legacy authentication;ps;FALSE
O12;(L1) Ensure modern authentication for Exchange Online is enabled (Automated);Set-OrganizationConfig -OAuth2ClientProfileEnabled $true;OAuth2ClientProfileEnabled\s+:\s+True;Set-OrganizationConfig -OAuth2ClientProfileEnabled $true;ps;FALSE
O13;(L1) Ensure modern authentication for SharePoint applications is required (Automated);Set-SPOTenant -LegacyAuthProtocolsEnabled $false;LegacyAuthProtocolsEnabled\s+:\s+False;Set-SPOTenant -LegacyAuthProtocolsEnabled $false;ps;FALSE
O14;(L1) Ensure the 'Password expiration policy' is set to 'Set passwords to never expire (recommended)' (Automated);Set-MsolPasswordPolicy -DomainName <DomainName> -PasswordNeverExpires $true;PasswordNeverExpires\s+:\s+True;Set-MsolPasswordPolicy -DomainName <YourDomainName> -PasswordNeverExpires $true;ps;FALSE
O21;(L1) Ensure the admin consent workflow is enabled (Automated);Set-MsolCompanySettings -UsersPermissionToUserConsentToAppEnabled $true;UsersPermissionToUserConsentToAppEnabled\s+:\s+True;;ps;FALSE
O26;(L2) Ensure Office 365 SharePoint infected files are disallowed for download (Automated);Set-SPOSite -Identity <SiteURL> -DenyAddAndCustomizePages 1;DenyAddAndCustomizePages\s+:\s+1;;ps;FALSE
O27;(L2) Ensure user consent to apps accessing company data on their behalf is not allowed (Automated);Set-MsolCompanySettings -UsersPermissionToUserConsentToAppEnabled $false;UsersPermissionToUserConsentToAppEnabled\s+:\s+False;;ps;FALSE
O34;(L1) Ensure DLP policies are enabled (Automated);Get-DlpPolicy | Where-Object { $_.Enabled -eq $true };Enabled\s+:\s+True;;ps;FALSE
O36;(L2) Ensure that SharePoint guest users cannot share items they don't own (Automated);Set-SPOSite -Identity <SiteURL> -SharingCapability Disabled;SharingCapability\s+:\s+Disabled;;ps;FALSE
O42;(L1) Ensure Exchange Online Spam Policies are set to notify administrators (Automated);"Set-HostedContentFilterPolicy -Identity ""Default"" -AdminNotificationEnabled $true";AdminNotificationEnabled\s+:\s+True;;ps;FALSE
O43;(L1) Ensure all forms of mail forwarding are blocked and/or disabled (Automated);Set-Mailbox -ForwardingSmtpAddress $null;ForwardingSmtpAddress\s+:\s+\$null;;ps;FALSE
O44;(L1) Ensure mail transport rules do not whitelist specific domains (Automated);"Get-TransportRule | Where-Object { $_.FromScope -eq ""InOrganization"" -and $_.SentToScope -eq ""InOrganization"" -and $_.ExceptIfFromAddressMatchesPatterns -ne $null }";FromScope\s+:\s+InOrganization\s+SentToScope\s+:\s+InOrganization\s+ExceptIfFromAddressMatchesPatterns\s+:\s+(.+);;ps;FALSE
O61;(L2) Ensure SharePoint external sharing is managed through domain whitelist/blacklists (Automated);Set-SPOTenant -SharingCapability ExternalUserAndGuestSharing;SharingCapability\s+:\s+ExternalUserAndGuestSharing;;ps;FALSE
O62;(L2) Block OneDrive for Business sync from unmanaged devices (Automated);Set-SPOTenant -UnmanagedDeviceBlockedForSync $true;UnmanagedDeviceBlockedForSync\s+:\s+True;;ps;FALSE
O63;(L1) Ensure expiration time for external sharing links is set (Automated);Set-SPOTenant -SharingCapability ExternalUserAndGuestSharing -DefaultSharingLinkType AnonymousAccess -DefaultLinkExpirationInDays 30;SharingCapability\s+:\s+ExternalUserAndGuestSharing\s+DefaultSharingLinkType\s+:\s+AnonymousAccess\s+DefaultLinkExpirationInDays\s+:\s+30;;ps;FALSE
O64;(L2) Ensure 'third-party storage services' are restricted in 'Microsoft 365 on the web' (Automated);"Set-OwaMailboxPolicy -Identity ""Default"" -AllowConsumerFileProviders $false";AllowConsumerFileProviders\s+:\s+False;;ps;FALSE
